<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
	<link rel="self" type="application/atom+xml" href="https://love2d.org/forums/app.php/feed/topic/91782" />

	<title>LÖVE</title>
	
	<link href="https://love2d.org/forums/index.php" />
	<updated>2021-09-05T10:11:07+00:00</updated>

	<author><name><![CDATA[LÖVE]]></name></author>
	<id>https://love2d.org/forums/app.php/feed/topic/91782</id>

		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-07T08:54:46+00:00</updated>

		<published>2021-08-07T08:54:46+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242846#p242846</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242846#p242846"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242846#p242846"><![CDATA[
<blockquote class="uncited"><div><img class="smilies" src="https://love2d.org/forums/images/smilies/ms-surprise.png" width="16" height="16" alt=":o" title="Surprised"> SO SORRY. Already knew that one. Though still useful(but in a way still collision detection, like bump.lua, not a bad thing). Anything else?</div></blockquote>Anything focused on space. I think that with some immagination, it could also have other original uses... but dunno<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Sat Aug 07, 2021 8:54 am</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-07T07:59:41+00:00</updated>

		<published>2021-08-07T07:59:41+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242842#p242842</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242842#p242842"/>
		<title type="html"><![CDATA[Re: rstar is here for you! - now with demo]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242842#p242842"><![CDATA[
<blockquote class="uncited"><div>Sounds awesome. <br>Sadly the Demo doesnt run here.<br>I get: game.lua:290: attempt to call field 'mod' (a nil value)</div></blockquote>Try replacing that line with <div class="codebox"><p>Code: </p><pre><code>math.fmod(i-1, 3)</code></pre></div> or <div class="codebox"><p>Code: </p><pre><code>(i-1) % 3</code></pre></div>One of these should fix the error, depending on your Lua version.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Sat Aug 07, 2021 7:59 am</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[BrotSagtMist]]></name></author>
		<updated>2021-08-06T22:51:56+00:00</updated>

		<published>2021-08-06T22:51:56+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242827#p242827</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242827#p242827"/>
		<title type="html"><![CDATA[Re: rstar is here for you! - now with demo]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242827#p242827"><![CDATA[
Sounds awesome. <br>Sadly the Demo doesnt run here.<br>I get: game.lua:290: attempt to call field 'mod' (a nil value)<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=180413">BrotSagtMist</a> — Fri Aug 06, 2021 10:51 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Gunroar:Cannon()]]></name></author>
		<updated>2021-08-05T21:05:51+00:00</updated>

		<published>2021-08-05T21:05:51+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242786#p242786</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242786#p242786"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242786#p242786"><![CDATA[
<img class="smilies" src="https://love2d.org/forums/images/smilies/ms-surprise.png" width="16" height="16" alt=":o" title="Surprised"> SO SORRY. Already knew that one. Though still useful(but in a way still collision detection, like bump.lua, not a bad thing). Anything else?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=167496">Gunroar:Cannon()</a> — Thu Aug 05, 2021 9:05 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-05T18:25:01+00:00</updated>

		<published>2021-08-05T18:25:01+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242780#p242780</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242780#p242780"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242780#p242780"><![CDATA[
<blockquote class="uncited"><div>Nice. Can it be used for something other than collision detection.</div></blockquote>Off course, a example is reducing the number of drawing calls to the strictly nececessary. You can think about your window as a rectangle, which can be used to search in the tree to get only objects that are visible on screen.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Thu Aug 05, 2021 6:25 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Gunroar:Cannon()]]></name></author>
		<updated>2021-08-04T19:01:19+00:00</updated>

		<published>2021-08-04T19:01:19+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242735#p242735</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242735#p242735"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242735#p242735"><![CDATA[
Nice. Can it be used for something other than collision detection.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=167496">Gunroar:Cannon()</a> — Wed Aug 04, 2021 7:01 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-03T23:08:13+00:00</updated>

		<published>2021-08-03T23:08:13+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242718#p242718</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242718#p242718"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242718#p242718"><![CDATA[
<blockquote class="uncited"><div>I imagine the R* technique covers that case better, but I'm concerned about insertion/deletion time.</div></blockquote>I've just remebered that I forgot to mention a important thing, my bad. <img class="smilies" src="https://love2d.org/forums/images/smilies/ms-death.png" width="16" height="16" alt=":death:" title="Death"> <br><br>Before the release of this library, version 1.1 was alredy planned, because I wanted to add another feature in a later release(it's also stated on GitHub).<br>This feature is bulk loading, which builds the tree in one hit, and overcomes the limits of sequential insertion.<br>I guess I will include also a tree destruction method (which should be pretty fast and straightforward). And maybe combine them in a elegant update method, who knows.<br>With these features the tree could be reconstructed on every frame quickly.<br><br>In conclusion, with the next version this library will get what it lacks to handle dynamic objects. I hope this will ease your worries and ones of others interested.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Tue Aug 03, 2021 11:08 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[togFox]]></name></author>
		<updated>2021-08-03T12:49:21+00:00</updated>

		<published>2021-08-03T12:49:21+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242701#p242701</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242701#p242701"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242701#p242701"><![CDATA[
I see now. Thanks both. I've never had to calculate so many collisions but I can see how some might have the need. I'll keep this in mind for future projects.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=170436">togFox</a> — Tue Aug 03, 2021 12:49 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[pgimeno]]></name></author>
		<updated>2021-08-03T12:03:19+00:00</updated>

		<published>2021-08-03T12:03:19+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242700#p242700</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242700#p242700"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242700#p242700"><![CDATA[
<blockquote class="uncited"><div>I'm struggling, out of my own ignorance, to understand how storing rectangles in a tree can be useful. I looked through the original post and don't 'get it'. Perhaps I've yet to uncover a problem that is best solved by R trees.</div></blockquote>Collision libraries like bump.lua are already using some kind of rectangle querying optimization, which is what this library does. Without such thing, if your world consists of, say, 1000 rectangles, you have to check each of them in order to verify if you're going to collide with it. Swept collisions are expensive to calculate, so checking 1000 rectangles is prohibitive. If you can check just those rectangles for which there can possible be a collision, the search space is greatly reduced. For example, of these 1000 rectangles it's possible that only 8 or 10 are near the moving entity.<br><br>This library is able to answer the question, "what rectangles are near the entity?"<br><br>Bump.lua utilizes a technique called a "spatial hash", a structure where the rectangles are stored in bigger containers aligned to a grid, and accessible via the coordinates of this grid. This technique is fairly straightforward; all operations are pretty fast, but it has its pitfalls, e.g. it's not very efficient when your rectangles are much bigger than the grid size, because each such rectangle has to be stored in O(n²) containers, or much smaller, meaning you may have a lot of rectangles in the same container. I imagine the R* technique covers that case better, but I'm concerned about insertion/deletion time.<br><br>Check the demo of bump: <a href="https://github.com/kikito/bump.lua/tree/demo" class="postlink">https://github.com/kikito/bump.lua/tree/demo</a> to see why this is important.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=137168">pgimeno</a> — Tue Aug 03, 2021 12:03 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-03T08:18:17+00:00</updated>

		<published>2021-08-03T08:18:17+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242694#p242694</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242694#p242694"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242694#p242694"><![CDATA[
<blockquote class="uncited"><div>I'm struggling, out of my own ignorance, to understand how storing rectangles in a tree can be useful. I looked through the original post and don't 'get it'. Perhaps I've yet to uncover a problem that is breast solved by R trees.<br><br>(I don't mean to devalue your library. All new libraries are good libraries!)</div></blockquote>It's ok, I've never released code before so I understand that my descriptions may be confusing. <br><br>Rectangle has a meaning that goes beyond four edges sticked togheter in this case. If you are familiar with collision detection techniques, you know that checking if a bird is touching a tree is pretty laborious, and annoying when you find out they do not at all.<br>Avoiding as much as possibile to jump in that meticulous job could be a key factor in a game. So people figured out that a complex shape could be represented by a rectangle that perfectly contains it (no waste of space); this way you can check if rectangles collide before going on with the precise testing.<br>Unfortunately in big games that could not be enough! When there are hundreds of rectangles to check, the time taken is still big.<br><br>This R*Tree is a <strong class="text-strong">optimization </strong>solution: your game might have a ton of collision checks to do, and care for fancy particle effects and animations as well on every frame. R*Tree avoids tests between far rectangles (and not only that).<br><br>In conclusion, if you have a small game this library is not going to make any difference, but on big projects it could potentially erase some bottlenecks.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Tue Aug 03, 2021 8:18 am</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[togFox]]></name></author>
		<updated>2021-08-03T09:26:46+00:00</updated>

		<published>2021-08-03T02:53:18+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242691#p242691</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242691#p242691"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242691#p242691"><![CDATA[
I'm struggling, out of my own ignorance, to understand how storing rectangles in a tree can be useful. I looked through the original post and don't 'get it'. Perhaps I've yet to uncover a problem that is best solved by R trees.<br><br>(I don't mean to devalue your library. All new libraries are good libraries!)<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=170436">togFox</a> — Tue Aug 03, 2021 2:53 am</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-02T17:21:34+00:00</updated>

		<published>2021-08-02T17:21:34+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242679#p242679</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242679#p242679"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242679#p242679"><![CDATA[
<blockquote class="uncited"><div>Haha. no. I don't think the algorithm was made by him, just this implementation. Stands for rectangle (?)<br><br>Really liking the sound of all this <img class="smilies" src="https://love2d.org/forums/images/smilies/ms-awesome.png" width="16" height="16" alt=":awesome:" title="I'M SO HAPPY I COULD SHIT A RAINBOW RIGHT NOW"> . And then does that mean it's really fast in getting, let's say, all objects touching/inside an entity?</div></blockquote>You're right. I'm going to add a demo project soon with some collision detection. Stay tuned  <img class="smilies" src="https://love2d.org/forums/images/smilies/ms-wink.png" width="16" height="16" alt=";)" title="Wink"><p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Mon Aug 02, 2021 5:21 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-02T17:07:50+00:00</updated>

		<published>2021-08-02T17:07:50+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242678#p242678</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242678#p242678"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242678#p242678"><![CDATA[
<blockquote class="uncited"><div>Does rstar stands for Rick Star?</div></blockquote>I really wish it was like that haha <img class="smilies" src="https://love2d.org/forums/images/smilies/ms-rofl.png" width="16" height="16" alt=":rofl:" title="ROFL"><p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Mon Aug 02, 2021 5:07 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Gunroar:Cannon()]]></name></author>
		<updated>2021-08-02T16:40:27+00:00</updated>

		<published>2021-08-02T16:40:27+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242677#p242677</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242677#p242677"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242677#p242677"><![CDATA[
Haha. no. I don't think the algorithm was made by him, just this implementation. Stands for rectangle (?)<br><br>Really liking the sound of all this <img class="smilies" src="https://love2d.org/forums/images/smilies/ms-awesome.png" width="16" height="16" alt=":awesome:" title="I'M SO HAPPY I COULD SHIT A RAINBOW RIGHT NOW"> . And then does that mean it's really fast in getting, let's say, all objects touching/inside an entity?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=167496">Gunroar:Cannon()</a> — Mon Aug 02, 2021 4:40 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[GVovkiv]]></name></author>
		<updated>2021-08-02T15:01:54+00:00</updated>

		<published>2021-08-02T15:01:54+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242673#p242673</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242673#p242673"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242673#p242673"><![CDATA[
Does rstar stands for Rick Star?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=169762">GVovkiv</a> — Mon Aug 02, 2021 3:01 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-02T12:52:14+00:00</updated>

		<published>2021-08-02T12:52:14+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242671#p242671</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242671#p242671"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242671#p242671"><![CDATA[
If you don't mind I would like to answer both your questions in a single post.<br><br>R-Tree seems to be the king in handling rectangles (R stands for Rectangle). It's so popular that there are a lot of variants, which are improvements of the base idea. I chose R* variant because in my opinion it is the one which does a better job in making searches fast.<br>E.g. Google Maps probably uses a couple of those: one on the server to find routes and places nearby, and one on your phone to render the map on the screen.<br><br>However, this seems to be the first public implementation of the R*Tree written in Lua; I didn't find anything on Internet. <br>As you can see in the paper I linked at the bottom of the main post, authors give detailed benchmark data but:<ol style="list-style-type:decimal"><li>Their implementation is written in a weird language.</li><li>They did it in the 90s</li></ol><blockquote class="uncited"><div><blockquote class="uncited"><div>It must be said that it's <strong class="text-strong">not always</strong> the best choice: to grow a optimal structure, insertion and deletion take a lot of effort, meaning that for a dynamic set of objects this is not a convenient technique.</div></blockquote>How slow is that? Like, how many insertions/deletions per frame are possible? Few? Hundreds? Thousands?</div></blockquote>That said I can't give you an answer now because I'm missing data, but I think my next step is going to be to perform some tests and post here my results. I can say that if you put static objects(like rocks, trees, walls) in it, which won't move much during gameplay, any physics-related task regarding them is going to be light-speed fast.<br><blockquote class="uncited"><div>Wow. Wait... so , like, if I want to get all bullet type entities in a tree that has entities added to it, for example, will it be faster than iterating through a table of all entites and getting which one is a bullet?</div></blockquote>Well this tree organises entities using their position in the world, so is useful for tasks like "find which bullet entities are hitting a wall, and should therefore stop or bounce". For your example a simple table is good; in that kind of tasks this structure isn't very helpful.<br>Anyway in the example I made I would suggest to keep bullets outside the tree, and ask the tree for each bullet which walls is touching on every frame.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Mon Aug 02, 2021 12:52 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[pgimeno]]></name></author>
		<updated>2021-08-01T21:50:22+00:00</updated>

		<published>2021-08-01T21:50:22+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242653#p242653</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242653#p242653"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242653#p242653"><![CDATA[
<blockquote class="uncited"><div>It must be said that it's <strong class="text-strong">not always</strong> the best choice: to grow a optimal structure, insertion and deletion take a lot of effort, meaning that for a dynamic set of objects this is not a convenient technique.</div></blockquote>How slow is that? Like, how many insertions/deletions per frame are possible? Few? Hundreds? Thousands?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=137168">pgimeno</a> — Sun Aug 01, 2021 9:50 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Gunroar:Cannon()]]></name></author>
		<updated>2021-08-01T21:40:07+00:00</updated>

		<published>2021-08-01T21:40:07+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242651#p242651</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242651#p242651"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242651#p242651"><![CDATA[
Wow. Wait... so , like, if I want to get all bullet type entities in a tree that has entities added to it, for example, will it be faster than iterating through a table of all entites and getting which one is a bullet?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=167496">Gunroar:Cannon()</a> — Sun Aug 01, 2021 9:40 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-08-01T20:24:09+00:00</updated>

		<published>2021-08-01T20:24:09+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242643#p242643</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242643#p242643"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242643#p242643"><![CDATA[
All search queries share the same base idea. Starting from the root: for each child see if it satisfies the input condition (intersects with rectangle or circle/contains a point); if yes, repeat on its children the same loop and go on until leaf level is reached.<br>On the average case, that loop is done for one node per tree level. In numbers this means that M x tree height rectangles are cheked. Tree height can be calculated using the formula <strong class="text-strong"><em class="text-italics">log</em><span style="font-size:50%;line-height:116%">M</span>N</strong>, where N is the number of rectangles you inserted in the tree.<br>For example if N=1000 and M=20, height is equal to 3: on average 20x3=60 rectangles are checked instead of a thousand.<br>In conclusion this is that fast, and if correctly tuned to the desired situation even faster.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Sun Aug 01, 2021 8:24 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Gunroar:Cannon()]]></name></author>
		<updated>2021-08-01T18:12:57+00:00</updated>

		<published>2021-08-01T18:12:57+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242637#p242637</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242637#p242637"/>
		<title type="html"><![CDATA[Re: rstar is here for you!]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242637#p242637"><![CDATA[
This seems neat. Is it really fast? Like how fast?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=167496">Gunroar:Cannon()</a> — Sun Aug 01, 2021 6:12 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Rick Astley]]></name></author>
		<updated>2021-09-05T10:11:07+00:00</updated>

		<published>2021-08-01T14:53:32+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=242633#p242633</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=242633#p242633"/>
		<title type="html"><![CDATA[rstar - an advanced space indexing library]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=242633#p242633"><![CDATA[
<span style="font-size:200%;line-height:116%"><strong class="text-strong">rstar</strong></span><br><strong class="text-strong">This is the official rstar library topic, welcome!</strong><br><br><span style="font-size:150%;line-height:116%">Introduction</span><br><a href="/wiki/rstar">rstar</a> is a Lua implementation of the R*Tree data structure. Briefly the R*Tree is a improved version of the classic R-Tree: a structure born to store rectangles of any dimensions, in a way that makes queries like <em class="text-italics">"nearest-neighbor searching"</em> and <em class="text-italics">"all rectangles in a area"</em> quick and efficient. <br>To achieve this, rectangles are distributed in groups: each of these groups contains at least <strong class="text-strong">m</strong> members, and never more than <strong class="text-strong">M</strong> members. A group is called leaf node, which also holds a rectangle sized in a way that contains all its entries(members). Leaf nodes can be treated as entries, thus they can be distributed in groups with the same rules mentioned before, giving birth to internal nodes (or branches).<br>The node at highest level, which contains all the structure, is called the root, and is the starting point for any kind of operation on the tree.<br>The R*Tree variant improves the original in the way it builds the structure: creates nodes trying to minimize overlap between them and using as much space as it can.<br><br><span style="font-size:150%;line-height:116%">Overview and Features</span><br>R*Tree is good for game developement because its nature makes it suitable in many situations. It must be said that it's <strong class="text-strong">not always</strong> the best choice: to grow a optimal structure, insertion and deletion take a lot of effort, meaning that for a dynamic set of objects this is not a convenient technique.<br>On the other hand for static objects with occasional updating, this is going to be lövely!<br>These are some examples where this library can be really helpful:<br><br><strong class="text-strong">Storing solid objects</strong><br>A advantage of this structure is that it does not need to know how big is the medium object, like a spatial hash does; thus making it great to store objects with a rich range of sizes.<br><br><strong class="text-strong">Representing "infinite" worlds</strong><br>Another advantage is that, unlike Quadtrees, R*Trees are not constrainted to a rigid boundary as they stretch as needed. Worlds which expand over time, like Minecraft's ones, can be handled easily.<br><br><strong class="text-strong">Filtering objects</strong><br>If you want to optimize the drawing of game objects, you can retrieve ones which intersect with the screen rectangle to discard invisible ones. Also finding all objects at a point is a very quick operation: sweet to know what the user is clicking!<br><br><strong class="text-strong">Detecting collisions</strong><br>To detect if the player is bumping into walls, does not make sense to test on a wall a mile away from them; this is a task where the ability to search quickly for walls around the player is a big deal.<br><br><strong class="text-strong">Raycasting</strong><br>This implementation comes with a method to retrieve all rectangles within a circular range, which could speed up raycasting by excluding objects not in the radius of sight.<br><br><strong class="text-strong">AI</strong><br>Nearest-neighbor search is included, and works both with rectangles inserted in the tree and arbitrary boxes.<br><br>That's all for now, thanks for checking this out!<br><br><strong class="text-strong">P.S. If you'd like to use this with dynamic objects, wait for version 1.1.</strong><br><br><span style="font-size:150%;line-height:116%">Links</span><ul><li><strong class="text-strong">Code and Documentation</strong> <a href="https://github.com/rick4stley/rstar" class="postlink">https://github.com/rick4stley/rstar</a></li><li><strong class="text-strong">The R-Tree</strong> <a href="http://www-db.deis.unibo.it/courses/SI-LS/papers/Gut84.pdf" class="postlink">http://www-db.deis.unibo.it/courses/SI- ... /Gut84.pdf</a></li><li><strong class="text-strong">The R*Tree</strong> <a href="https://infolab.usc.edu/csci599/Fall2001/paper/rstar-tree.pdf" class="postlink">https://infolab.usc.edu/csci599/Fall200 ... r-tree.pdf</a></li></ul><span style="font-size:150%;line-height:116%">Try the demo</span><br>You can download it from here or GitHub, where you can find also source code as separate files.<dl class="file"><dt><img src="./images/upload_icons/love.png" alt="" /> <a class="postlink" href="https://love2d.org/forums/download/file.php?id=20069">tank - rstar demo.love</a></dt></dl><p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=174115">Rick Astley</a> — Sun Aug 01, 2021 2:53 pm</p><hr />
]]></content>
	</entry>
	</feed>
