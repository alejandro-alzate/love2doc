<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
	<link rel="self" type="application/atom+xml" href="https://love2d.org/forums/app.php/feed/topic/95650" />

	<title>LÖVE</title>
	
	<link href="https://love2d.org/forums/index.php" />
	<updated>2024-04-05T14:17:13+00:00</updated>

	<author><name><![CDATA[LÖVE]]></name></author>
	<id>https://love2d.org/forums/app.php/feed/topic/95650</id>

		<entry>
		<author><name><![CDATA[Bondrusiek]]></name></author>
		<updated>2024-04-05T14:17:13+00:00</updated>

		<published>2024-04-05T14:17:13+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259181#p259181</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259181#p259181"/>
		<title type="html"><![CDATA[Re: 2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259181#p259181"><![CDATA[
<blockquote class="uncited"><div>Try self:withinCols(5) so the sugar becomes FallingSand.withinCols(self, 5).</div></blockquote>It works now. Thank you!<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=258195">Bondrusiek</a> — Fri Apr 05, 2024 2:17 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[RNavega]]></name></author>
		<updated>2024-04-04T21:12:39+00:00</updated>

		<published>2024-04-04T21:12:39+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259176#p259176</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259176#p259176"/>
		<title type="html"><![CDATA[Re: 2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259176#p259176"><![CDATA[
<div class="codebox"><p>Code: </p><pre><code>function FallingSand:update(dt)print(FallingSand:withinCols(5))end</code></pre></div>Try self:withinCols(5) so the sugar becomes FallingSand.withinCols(self, 5).<br><br>The colon syntax is explained in here (the entire PIL e-book is useful btw): <a href="https://www.lua.org/pil/16.html" class="postlink">https://www.lua.org/pil/16.html</a><p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=155226">RNavega</a> — Thu Apr 04, 2024 9:12 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Bondrusiek]]></name></author>
		<updated>2024-04-04T17:14:20+00:00</updated>

		<published>2024-04-04T17:14:20+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259174#p259174</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259174#p259174"/>
		<title type="html"><![CDATA[Re: 2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259174#p259174"><![CDATA[
pgimeno MrFariator Boble68 thank you for your suggestion/tips/help! <br><br>I also investigate a bit and I found the interesting thing. I would like to point out that I am not an expert in Lua (I am more C++-centric):<br>I printed two values one is self.grid and second is self.nextGrid:<div class="codebox"><p>Code: </p><pre><code>    print("grid ", self.grid)    print("next_grid ", self.nextGrid)</code></pre></div><blockquote class="uncited"><div>grid table: 0x01033e9970<br>next_grid table: 0x01033e99b8</div></blockquote>If I understand correctly on the right is an address of memory so If I assign <div class="codebox"><p>Code: </p><pre><code>self.grid = self.nextGrid</code></pre></div><em class="text-italics">self.grid</em> is the same memory address like <em class="text-italics">self.nextGrid</em>. I have to assign only values so I created a for loop:<div class="codebox"><p>Code: </p><pre><code>        for i = 1, self.cols do            for j = 1, self.rows do                if self.grid[i][j] ~= self.nextGrid[i][j] then                    self.grid[i][j] = self.nextGrid[i][j]                end            end        end</code></pre></div>I create a falling sand effect. Here is my Love2D example.<div class="inline-attachment"><dl class="file"><dt class="attach-image"><a href="https://love2d.org/forums/download/file.php?id=24125&amp;mode=view"><img src="https://love2d.org/forums/download/file.php?id=24125" class="postimage" alt="test.png" /></a></dt></dl></div>PS.<br>I have a problem with <strong class="text-strong"><em class="text-italics">classic</em></strong> module. IE<div class="codebox"><p>Code: </p><pre><code>FallingSand = Object:extend()function FallingSand:new()    self.cols = 5endfunction FallingSand:update(dt)print(FallingSand:withinCols(5))endfunction FallingSand:draw()endfunction FallingSand:withinCols(x)    return x &gt;= 1 and x &lt;= self.cols -- Other func than new/update/draw. In this kind of function all self values are nil ???end</code></pre></div><p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=258195">Bondrusiek</a> — Thu Apr 04, 2024 5:14 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[pgimeno]]></name></author>
		<updated>2024-04-04T11:01:26+00:00</updated>

		<published>2024-04-04T11:01:26+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259173#p259173</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259173#p259173"/>
		<title type="html"><![CDATA[Re: 2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259173#p259173"><![CDATA[
There's also an indentation problem within FallingSand:update(). This IF statement:<div class="codebox"><p>Code: </p><pre><code>if input:down('leftButton') then</code></pre></div>is closed at the very end of the function, but the indentation suggests that that's not the intention.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=137168">pgimeno</a> — Thu Apr 04, 2024 11:01 am</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[MrFariator]]></name></author>
		<updated>2024-04-03T18:16:23+00:00</updated>

		<published>2024-04-03T18:16:23+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259166#p259166</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259166#p259166"/>
		<title type="html"><![CDATA[Re: 2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259166#p259166"><![CDATA[
Keep in mind that whenever you create a new instance of this FallingSand class, the m_grid variable is essentially reset (ie. the "state" becomes 0 for all entries). You might be creating new instances somewhere else in your code, and this is the source of your woes.<br><br>To fix this, you'd need to make sure that each instance of this FallingSand class would have its own m_grid variable. For example, inside the new function you'd do this:<div class="codebox"><p>Code: </p><pre><code>function FallingSand:new()    m_cols = math.floor(WIDTH / m_size)    m_rows = math.floor(HEIGHT / m_size)        -- 'self' refers to the new instance we're creating    self.m_grid = {}    for i = 1, m_cols do        self.m_grid[i] = {}        for j = 1, m_rows do             self.m_grid[i][j] = 0        end    endend</code></pre></div>And similarly handle the "m_grid" in other places via the "self". Of course, this is assuming you are using <a href="https://github.com/rxi/classic/" class="postlink">classic</a>.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=138465">MrFariator</a> — Wed Apr 03, 2024 6:16 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Bobble68]]></name></author>
		<updated>2024-04-03T18:28:16+00:00</updated>

		<published>2024-04-03T18:09:15+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259165#p259165</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259165#p259165"/>
		<title type="html"><![CDATA[Re: 2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259165#p259165"><![CDATA[
Currently looking through it, however you haven't given us much to go on in terms of what's actually wrong vs what you want, so it's not easy to pinpoint the issue, especially without the full project.<br><br>Edit: Something I have noticed is that at line 44 col and row can be 0 which isn't accounted for at line 51 which starts at 1, however I have no idea if this is intentional or is even related your problem.<br><br>Edit 2: I've also noticed that you have a lot of variables with the m_ prefix, which I know is commonly used to show a variable is a member of a class. However (assuming my assuption is correct), this isn't how Lua works - the local variables here will be shared between all instances of the FallingSand object, which may be causing your problems (again, hard to know without context).<br><br>In Lua, members of an object are accessed by indexing it, and object functions can access themselves by using the 'self' keyword. Here's what I imagine it should look like:<br><div class="codebox"><p>Code: </p><pre><code>FallingSand = Object:extend()local WIDTH  = 500local HEIGHT = 300function FallingSand:new()    self.size = 5    self.grid = {}    self.nextGrid = {}    self.clicked = false    self.hueValue = 0    self.cols = math.floor(WIDTH / self.size)    self.rows = math.floor(HEIGHT / self.size)    for i = 1, self.cols do        self.grid[i]     = {}        self.nextGrid[i] = {}        for j = 1, self.rows do             self.grid[i][j] = 0            self.nextGrid[i][j] = 0        end    endendfunction FallingSand:update(dt)    local mouseX, mouseY    local mouseCol =  1    local mouseRow = 1    local matrix = 5    local extent = math.floor(matrix / 2)    if input:down('leftButton') then        mouseX, mouseY = love.mouse.getPosition()        mouseCol = math.floor(mouseX / self.size)        mouseRow = math.floor(mouseY / self.size)        for i = -extent, extent do            for j = -extent, extent do                local randomValue = love.math.random(100)                if randomValue &lt; 75 then                    local col = mouseCol + i + 1                    local row = mouseRow + j + 1                    if FallingSand:withinCols(col) and FallingSand:withinRows(row) then                        --*********** here is self.grid[i][j] set to 100                        self.grid[col][row] = 100                     end                end            end        end        for i = 1, self.cols do            for j = 1, self.rows do                 self.nextGrid[i][j] = 0            end        end        for i = 1, self.cols do            for j = 1, self.rows do                --  What is the state?                --*********** state always is set to 0 from self.grid[i][j]                local state = self.grid[i][j]                -- Randomly fall left or right                if state &gt; 0 then                     local below = self.grid[i][j + 1]                    -- Randomly fall left or right                    local dir = 1                    if love.math.random(100) &lt; 50 then                         dir = dir * -1                    end                    --Check below left or right                    local belowA = -1                    local belowB = -1                    if FallingSand:withinCols(i + dir) then                         belowA = self.grid[i + dir][j + 1]                    end                    if FallingSand:withinCols(i - dir) then                         belowB = self.grid[i - dir][j + 1]                    end                    -- Can it fall below or left or right?                    if below == 0 then                         self.nextGrid[i][j + 1] = state                    elseif belowA == 0 then                         self.nextGrid[i + dir][j + 1] = state                    elseif belowB == 0 then                        self.nextGrid[i - dir][j + 1] = state;                        -- Stay put!                    else                         self.nextGrid[i][j] = state;                    end                end            end        end    self.grid = self.nextGrid    endendfunction FallingSand:draw()    love.graphics.print("Falling Sand", 0, 0)    for i = 1, self.cols do         for j = 1, self.rows do             if self.grid[i][j] &gt; 0 then                 love.graphics.setColor(0.5, 1.0, 1.0)                local x = (i - 1) * self.size                local y = (j - 1) * self.size                love.graphics.rectangle('fill', x, y, self.size, self.size)            end        end    endendfunction FallingSand:withinCols(x)    return x &gt;= 1 and x &lt;= self.colsendfunction FallingSand:withinRows(y)    return y &gt;= 1 and y &lt;= self.rowsend</code></pre></div>The variable declarations have been moved inside the :new() function, since they need to be declared for every new object. Hopefully this is your issue, but it's impossible to say.<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=210320">Bobble68</a> — Wed Apr 03, 2024 6:09 pm</p><hr />
]]></content>
	</entry>
		<entry>
		<author><name><![CDATA[Bondrusiek]]></name></author>
		<updated>2024-04-03T17:14:16+00:00</updated>

		<published>2024-04-03T17:14:16+00:00</published>
		<id>https://love2d.org/forums/viewtopic.php?p=259164#p259164</id>
		<link href="https://love2d.org/forums/viewtopic.php?p=259164#p259164"/>
		<title type="html"><![CDATA[2D Array]]></title>

		
		<content type="html" xml:base="https://love2d.org/forums/viewtopic.php?p=259164#p259164"><![CDATA[
Hi I have no a big experience with Lua. I have a problem with 2d array. I mark by "*" where is a critical points:<div class="codebox"><p>Code: </p><pre><code>FallingSand = Object:extend()local WIDTH  = 500local HEIGHT = 300local m_size = 5local m_colslocal m_rowslocal m_grid = {}local m_nextGrid = {}local m_clicked = falselocal m_hueValue = 0function FallingSand:new()    m_cols = math.floor(WIDTH / m_size)    m_rows = math.floor(HEIGHT / m_size)    for i = 1, m_cols do        m_grid[i]     = {}        m_nextGrid[i] = {}        for j = 1, m_rows do             m_grid[i][j] = 0            m_nextGrid[i][j] = 0        end    endendfunction FallingSand:update(dt)    local mouseX, mouseY    local mouseCol =  1    local mouseRow = 1    local matrix = 5    local extent = math.floor(matrix / 2)    if input:down('leftButton') then        mouseX, mouseY = love.mouse.getPosition()        mouseCol = math.floor(mouseX / m_size)        mouseRow = math.floor(mouseY / m_size)        for i = -extent, extent do            for j = -extent, extent do                local randomValue = love.math.random(100)                if randomValue &lt; 75 then                    local col = mouseCol + i + 1                    local row = mouseRow + j + 1                    if FallingSand:withinCols(col) and FallingSand:withinRows(row) then                        --*********** here is m_grid[i][j] set to 100                        m_grid[col][row] = 100                     end                end            end        end    for i = 1, m_cols do        for j = 1, m_rows do             m_nextGrid[i][j] = 0        end    end    for i = 1, m_cols do        for j = 1, m_rows do            --  What is the state?            --*********** state always is set to 0 from m_grid[i][j]            local state = m_grid[i][j]            -- Randomly fall left or right            if state &gt; 0 then                 local below = m_grid[i][j + 1]                -- Randomly fall left or right                local dir = 1                if love.math.random(100) &lt; 50 then                     dir = dir * -1                end                --Check below left or right                local belowA = -1                local belowB = -1                if FallingSand:withinCols(i + dir) then                     belowA = m_grid[i + dir][j + 1]                end                if FallingSand:withinCols(i - dir) then                     belowB = m_grid[i - dir][j + 1]                end                -- Can it fall below or left or right?                if below == 0 then                     m_nextGrid[i][j + 1] = state                elseif belowA == 0 then                     m_nextGrid[i + dir][j + 1] = state                elseif belowB == 0 then                    m_nextGrid[i - dir][j + 1] = state;                    -- Stay put!                else                     m_nextGrid[i][j] = state;                end            end        end    end    m_grid = m_nextGrid    endendfunction FallingSand:draw()    love.graphics.print("Falling Sand", 0, 0)    for i = 1, m_cols do         for j = 1, m_rows do             if m_grid[i][j] &gt; 0 then                 love.graphics.setColor(0.5, 1.0, 1.0)                local x = (i - 1) * m_size                local y = (j - 1) * m_size                love.graphics.rectangle('fill', x, y, m_size, m_size)            end        end    endendfunction FallingSand:withinCols(x)    return x &gt;= 1 and x &lt;= m_colsendfunction FallingSand:withinRows(y)    return y &gt;= 1 and y &lt;= m_rowsend</code></pre></div>I have no idea how solve that. I use print() func to debug value and in input:down() m_grid[][] is set on 100 but lower m_grid[] [] always return 0. Do you have nay tips ?<p>Statistics: Posted by <a href="https://love2d.org/forums/memberlist.php?mode=viewprofile&amp;u=258195">Bondrusiek</a> — Wed Apr 03, 2024 5:14 pm</p><hr />
]]></content>
	</entry>
	</feed>
